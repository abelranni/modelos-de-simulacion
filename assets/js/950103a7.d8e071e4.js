"use strict";(self.webpackChunkmodelos_de_simulacion=self.webpackChunkmodelos_de_simulacion||[]).push([[629],{3905:(e,r,n)=>{n.d(r,{Zo:()=>m,kt:()=>g});var a=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function t(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,a,o=function(e,r){if(null==e)return{};var n,a,o={},t=Object.keys(e);for(a=0;a<t.length;a++)n=t[a],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)n=t[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var r=a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},m=function(e){var r=u(e.components);return a.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},c=a.forwardRef((function(e,r){var n=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=u(n),c=o,g=p["".concat(l,".").concat(c)]||p[c]||d[c]||t;return n?a.createElement(g,s(s({ref:r},m),{},{components:n})):a.createElement(g,s({ref:r},m))}));function g(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var t=n.length,s=new Array(t);s[0]=c;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<t;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5150:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const t={marp:!0,theme:"default",size:969,paginate:!0},s="01.04 - N\xfameros pseudoaleatorios en Python",i={unversionedId:"Introduccion/01.04_py_numeros_pseudoaleatorios",id:"Introduccion/01.04_py_numeros_pseudoaleatorios",title:"01.04 - N\xfameros pseudoaleatorios en Python",description:"Modelos de Simualci\xf3n",source:"@site/docs/01 - Introduccion/01.04_py_numeros_pseudoaleatorios.md",sourceDirName:"01 - Introduccion",slug:"/Introduccion/01.04_py_numeros_pseudoaleatorios",permalink:"/modelos-de-simulacion/docs/Introduccion/01.04_py_numeros_pseudoaleatorios",draft:!1,editUrl:"https://github.com/abelranni/modelos-de-simulacion/tree/main/docs/01 - Introduccion/01.04_py_numeros_pseudoaleatorios.md",tags:[],version:"current",frontMatter:{marp:!0,theme:"default",size:969,paginate:!0},sidebar:"tutorialSidebar",previous:{title:"01.03 - M\xe9todos Congruenciales Lineales",permalink:"/modelos-de-simulacion/docs/Introduccion/01.03_metodos_congruenciales_lineales"},next:{title:"02 - Variables Aleatorias",permalink:"/modelos-de-simulacion/docs/category/02---variables-aleatorias"}},l={},u=[{value:"Modelos de Simualci\xf3n",id:"modelos-de-simualci\xf3n",level:2},{value:"Generar n\xfameros pseudoaleatorios",id:"generar-n\xfameros-pseudoaleatorios",level:2},{value:"Generar n\xfameros pseudoaleatorios enteros",id:"generar-n\xfameros-pseudoaleatorios-enteros",level:2},{value:"Generar n\xfameros pseudoaleatorios con una distribuci\xf3n normal",id:"generar-n\xfameros-pseudoaleatorios-con-una-distribuci\xf3n-normal",level:2},{value:"Numeros aleatorios criptogr\xe1ficamente seguros",id:"numeros-aleatorios-criptogr\xe1ficamente-seguros",level:2},{value:"SystemRandom",id:"systemrandom",level:3},{value:"Secrets",id:"secrets",level:3},{value:"Generar n\xfameros aleatorios criptogr\xe1ficamente seguros",id:"generar-n\xfameros-aleatorios-criptogr\xe1ficamente-seguros",level:4},{value:"Referencias",id:"referencias",level:2}],m={toc:u},p="wrapper";function d(e){let{components:r,...n}=e;return(0,o.kt)(p,(0,a.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"0104---n\xfameros-pseudoaleatorios-en-python"},"01.04 - N\xfameros pseudoaleatorios en Python"),(0,o.kt)("h2",{id:"modelos-de-simualci\xf3n"},"Modelos de Simualci\xf3n"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"generar-n\xfameros-pseudoaleatorios"},"Generar n\xfameros pseudoaleatorios"),(0,o.kt)("p",null,"Para generar n\xfameros pseudoaleatorios en Python, se utiliza la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"random()")," de la librer\xeda ",(0,o.kt)("inlineCode",{parentName:"p"},"random"),". Esta funci\xf3n devuelve un n\xfamero pseudoaleatorio entre 0 y 1."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import random\nprint(random.random())\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"generar-n\xfameros-pseudoaleatorios-enteros"},"Generar n\xfameros pseudoaleatorios enteros"),(0,o.kt)("p",null,"Para generar n\xfameros pseudoaleatorios enteros en Python, se utiliza la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"randint()")," de la librer\xeda ",(0,o.kt)("inlineCode",{parentName:"p"},"random"),". Esta funci\xf3n devuelve un n\xfamero pseudoaleatorio entre los dos n\xfameros que se le pasan como par\xe1metros."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import random\nprint(random.randint(1, 10))\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"generar-n\xfameros-pseudoaleatorios-con-una-distribuci\xf3n-normal"},"Generar n\xfameros pseudoaleatorios con una distribuci\xf3n normal"),(0,o.kt)("p",null,"Para generar n\xfameros pseudoaleatorios con una distribuci\xf3n normal en Python, se utiliza la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"normalvariate()")," de la librer\xeda ",(0,o.kt)("inlineCode",{parentName:"p"},"random"),". Esta funci\xf3n devuelve un n\xfamero pseudoaleatorio con una distribuci\xf3n normal con media y desviaci\xf3n t\xedpica que se le pasan como par\xe1metros."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import random\nprint(random.normalvariate(0, 1))\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"numeros-aleatorios-criptogr\xe1ficamente-seguros"},"Numeros aleatorios criptogr\xe1ficamente seguros"),(0,o.kt)("p",null,"El m\xf3dulo secrets en Python se utiliza para generar n\xfameros aleatorios criptogr\xe1ficamente seguros, lo que es \xfatil en situaciones donde la seguridad es importante, como la generaci\xf3n de contrase\xf1as, tokens o claves de cifrado. A diferencia del m\xf3dulo random, secrets utiliza fuentes de entrop\xeda del sistema para generar n\xfameros verdaderamente aleatorios."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"En general, el m\xf3dulo secrets utiliza la funci\xf3n os.urandom() de Python, que a su vez hace uso de las siguientes fuentes de entrop\xeda en funci\xf3n del sistema operativo:"),(0,o.kt)("p",null,"Linux, macOS y otros sistemas UNIX-like: La funci\xf3n os.urandom() se basa en el dispositivo /dev/urandom, que es un generador de n\xfameros aleatorios criptogr\xe1ficamente seguro proporcionado por el n\xfacleo del sistema operativo. Este dispositivo utiliza varias fuentes de entrop\xeda, como el ruido de dispositivos de hardware (teclado, rat\xf3n, etc.), eventos del sistema y la hora del sistema, para generar n\xfameros aleatorios."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Windows: En sistemas Windows, la funci\xf3n os.urandom() utiliza la funci\xf3n CryptGenRandom (para versiones anteriores de Windows) o BCryptGenRandom (para Windows 8 y versiones posteriores) proporcionada por el sistema operativo. Estas funciones utilizan fuentes de entrop\xeda similares a las de los sistemas UNIX-like, como eventos de hardware, eventos del sistema y la hora del sistema, para generar n\xfameros aleatorios."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Es importante tener en cuenta que aunque estas fuentes de entrop\xeda son generalmente consideradas seguras para la mayor\xeda de los prop\xf3sitos, no son inmunes a ataques. En casos extremadamente raros y con recursos suficientes, un atacante podr\xeda intentar influir en estas fuentes de entrop\xeda o predecir su comportamiento. Sin embargo, en la pr\xe1ctica, esto es altamente improbable y, para la mayor\xeda de los casos de uso, el m\xf3dulo secrets proporciona n\xfameros aleatorios suficientemente seguros."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"systemrandom"},"SystemRandom"),(0,o.kt)("p",null,"Para generar n\xfameros aleatorios criptogr\xe1ficamente seguros en Python, se utiliza la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"SystemRandom()")," de la librer\xeda ",(0,o.kt)("inlineCode",{parentName:"p"},"random"),". Esta funci\xf3n devuelve un n\xfamero aleatorio criptogr\xe1ficamente seguro."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import random\nprint(random.SystemRandom().random())\n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"secrets"},"Secrets"),(0,o.kt)("h4",{id:"generar-n\xfameros-aleatorios-criptogr\xe1ficamente-seguros"},"Generar n\xfameros aleatorios criptogr\xe1ficamente seguros"),(0,o.kt)("p",null,"Para generar n\xfameros aleatorios criptogr\xe1ficamente seguros en Python, se utiliza la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"randbits()")," de la librer\xeda ",(0,o.kt)("inlineCode",{parentName:"p"},"secrets"),". Esta funci\xf3n devuelve un n\xfamero aleatorio criptogr\xe1ficamente seguro."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generar un n\xfamero entero seguro aleatorio en un rango:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import secrets\na, b = 1, 10\nnumero_aleatorio = secrets.randbelow(b - a + 1) + a\nprint("N\xfamero entero aleatorio seguro:", numero_aleatorio)\n')))),(0,o.kt)("hr",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generar un n\xfamero entero seguro aleatorio en un rango:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import secrets\na, b = 1, 10\nnumero_aleatorio = secrets.randbelow(b - a + 1) + a\nprint("N\xfamero entero aleatorio seguro:", numero_aleatorio)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generar una cadena segura de bytes aleatorios:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import secrets\nnum_bytes = 16\nbytes_aleatorios = secrets.token_bytes(num_bytes)\nprint("Bytes aleatorios seguros:", bytes_aleatorios)\n')))),(0,o.kt)("hr",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generar un token hexadecimal seguro:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import secrets\nlongitud = 32\ntoken_hexadecimal = secrets.token_hex(longitud)\nprint("Token hexadecimal seguro:", token_hexadecimal)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generar un token URL seguro (base64 sin relleno):"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import secrets\nlongitud = 32\ntoken_url = secrets.token_urlsafe(longitud)\nprint("Token URL seguro:", token_url)\n')))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"referencias"},"Referencias"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/random.html"},"random \u2014 Generate pseudo-random numbers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/secrets.html"},"secrets \u2014 Generate secure random numbers for managing secrets"))))}d.isMDXComponent=!0}}]);